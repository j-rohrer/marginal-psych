---
title: "Example 2: Relationship Status and the Importance of Friends"
author: "Julia Rohrer"
date: "`r Sys.Date()`"
format: 
  html:
    toc: true
---

Before we start, let's execute a helper script that loads the necessary dependencies.

```{r}
source(here::here("scripts/load.R"))

```

# Overview

This document contains example 2, in which we analyze the association between relationship status and the importance people assign to friends.
Data can be retrieved from https://osf.io/gj6x5/files/osfstorage/63b81606c8da86094edf234b. 

# Read and clean the data

```{r}
# Read the data
dat <- read.csv(here("data/start.csv"))

# Restrict to range that we can model well
dat <- dat[dat$sex != 3, ] # exclude 5 people who reported a gender distinct from male/female
dat <- dat[dat$age < 60, ] # exclude people over the age of 60

# Limit to complete cases
dat <- dat[complete.cases(dat[, c("age", "sex", "partner_any", "IMP_friends_Start")]),]

dat$sex <- as.factor(dat$sex)

table(dat$age)
table(dat$sex)
table(dat$partner_any)

dat <- dat |>
  mutate(sex = factor(sex, levels = c(1, 2), labels = c("female", "male"))) |>
  rename(partner = partner_any,
         gender = sex,
         friendship_importance = IMP_friends_Start)
```
# Visualize associations with age

```{r}
# Change colors
# Change visuals of the categorical

age_lin <- lm(friendship_importance ~ age, data = dat)
age_cat <- lm(friendship_importance ~ as.factor(age), data = dat)
age_smooth <- lm(friendship_importance ~ bs(age, df = 4), data = dat)

pred_lin <- avg_predictions(age_lin, by = "age")
pred_cat <- avg_predictions(age_cat, by = "age")
pred_smooth <- avg_predictions(age_smooth, by = "age")

# Expand categorical predictions to plot them as step function including ribbon
pred_cat_expanded <- data.frame(matrix(NA, nrow = length(rep(pred_cat$estimate, each = 100)), ncol = 4))
names(pred_cat_expanded) <- c("age", "estimate", "conf.low", "conf.high")
pred_cat_expanded$age <- seq(from = min(pred_cat$age), to = (max(pred_cat$age) + 0.999999), length.out = nrow(pred_cat_expanded))
pred_cat_expanded$estimate <- rep(pred_cat$estimate, each = 100)
pred_cat_expanded$conf.low <- rep(pred_cat$conf.low, each = 100)
pred_cat_expanded$conf.high <- rep(pred_cat$conf.high, each = 100)

# color
col_cat <- "#E69F00"
col_lin <- "#D55E00"
col_smooth <- "#CC79A7"

ggplot() +
  # categorical
  geom_line(data = pred_cat_expanded, aes(x = age, y = estimate, group = floor(age)), color = col_cat) +
  geom_ribbon(data = pred_cat_expanded, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = col_cat) +
  # linear
  geom_line(data = pred_lin, aes(x = age, y = estimate), color = col_lin) +
  geom_ribbon(data = pred_lin, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = col_lin) +
  # smoothed
  geom_line(data = pred_smooth, aes(x = age, y = estimate), color = col_smooth) +
  geom_ribbon(data = pred_smooth, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = col_smooth) +
  coord_cartesian(ylim = c(2.5, 5)) +
  xlab("Age") +
  ylab("Importance of friends (95% CI)")
ggsave(here("plots/age.png"), width = 4, height = 3)

```





# Model fitting and interpretation with `marginaleffects`

```{r}

mod <- lm(friendship_importance ~ bs(age, df = 4) + gender + partner +
            bs(age, df = 4):gender + partner:gender + bs(age, df = 4):partner, data = dat)

# Main result
avg_comparisons(mod, variables = "partner")

# Separate estimates for each gender
avg_comparisons(mod, variables = "partner", by = "gender")

# Compare the gender-specific estimates
avg_comparisons(mod, variables = "partner", by = "gender", hypothesis = "b2 - b1 = 0")

# Generate age-specific estimates
# Note that the wiggliness of this line will depend on how
# we modeled age
comp <- avg_comparisons(mod, variables = "partner", by = "age")

ggplot(comp, aes(x = age, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_line() +
  geom_ribbon(alpha = .1) +
  geom_hline(yintercept = 0) +
  ylab("Association partner and friendship importance")
```


# Ordinal robustness check

```{r}
dat$friendship_importance_factor <- factor(dat$friendship_importance, ordered = TRUE)

mod_ord <- clm(friendship_importance_factor ~ bs(age, df = 4) + gender + partner +
            bs(age, df = 4):gender + partner:gender + bs(age, df = 4):partner, 
            data = dat,
            link = "probit")

avg_comparisons(mod_ord, variables = "partner")

avg_comparisons(mod_ord, variables = "partner", hypothesis = ~ I(sum(x * 1:5)))

``` 

# Varying the complexity of the linear model to see what happens
Let's vary model complexity to see what happens to our target quantity, the association between having a partner and friendship importance (holding constant age and gender).

## Age variations
```{r}
# No age
mod_age_0 <- lm(friendship_importance ~ gender + partner +
            partner:gender, data = dat)
comp_age_0 <- avg_comparisons(mod_age_0, variables = "partner")
comp_age_0$model <- "Not included"

# Linear age
mod_age_1 <- lm(friendship_importance ~ age + gender + partner +
            age:gender + partner:gender + age:partner, data = dat)
comp_age_1 <- avg_comparisons(mod_age_1, variables = "partner")
comp_age_1$model <- "Linear"

# Quadratic age
mod_age_2 <- lm(friendship_importance ~ poly(age, 2) + gender + partner +
            poly(age, 2):gender + partner:gender + poly(age, 2):partner, data = dat)
comp_age_2 <- avg_comparisons(mod_age_2, variables = "partner")
comp_age_2$model <- "Quadratic"

# Cubic age
mod_age_3 <- lm(friendship_importance ~ poly(age, 3) + gender + partner +
            poly(age, 3):gender + partner:gender + poly(age, 3):partner, data = dat)
comp_age_3 <- avg_comparisons(mod_age_3, variables = "partner")
comp_age_3$model <- "Cubic"

# Quartic age
mod_age_4 <- lm(friendship_importance ~ poly(age, 4) + gender + partner +
            poly(age, 4):gender + partner:gender + poly(age, 4):partner, data = dat)
comp_age_4 <- avg_comparisons(mod_age_4, variables = "partner")
comp_age_4$model <- "Quartic"


# Splines, df = 3
mod_age_5 <- lm(friendship_importance ~ bs(age, df = 3) + gender + partner +
                  bs(age, df = 3):gender + partner:gender + bs(age, df = 3):partner, data = dat)
comp_age_5 <- avg_comparisons(mod_age_5, variables = "partner")
comp_age_5$model <- "Splines, df = 3"


# Splines, df = 4 (same as above)
mod_age_6 <- lm(friendship_importance ~ bs(age, df = 4) + gender + partner +
                  bs(age, df = 3):gender + partner:gender + bs(age, df = 3):partner, data = dat)
comp_age_6 <- avg_comparisons(mod_age_6, variables = "partner")
comp_age_6$model <- "Splines, df = 4"

# Splines, df = 5
mod_age_7 <- lm(friendship_importance ~ bs(age, df = 5) + gender + partner +
                  bs(age, df = 5):gender + partner:gender + bs(age, df = 5):partner, data = dat)
comp_age_7 <- avg_comparisons(mod_age_7, variables = "partner")
comp_age_7$model <- "Splines, df = 5"

comp_age <- rbind(data.frame(comp_age_0), data.frame(comp_age_1), 
                  data.frame(comp_age_2), data.frame(comp_age_3),
                  data.frame(comp_age_4), data.frame(comp_age_5),
                  data.frame(comp_age_6), data.frame(comp_age_7))
comp_age$no <- 1:8
ggplot(comp_age, aes(x = no, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_point() +
  geom_errorbar() +
  geom_hline(yintercept = 0) +
  coord_cartesian(ylim = c(-0.4, 0.4)) +
  scale_x_continuous(breaks = 1:8, labels = comp_age$model) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  xlab("Way that age is included in model") +
  ylab("Estimated difference in friendship importance")

```

## Interaction variations
```{r}
# No interactions
mod_interact_1 <- lm(friendship_importance ~ bs(age, df = 4) + gender + partner, data = dat)
comp_interact_1 <- avg_comparisons(mod_interact_1, variables = "partner")
comp_interact_1$model <- "No interaction"
# Add two-way interactions (same as above)
mod_interact_2 <- lm(friendship_importance ~ bs(age, df = 4) + gender + partner +
                       bs(age, df = 4):gender + partner:gender + bs(age, df = 4):partner, data = dat)
comp_interact_2 <- avg_comparisons(mod_interact_2, variables = "partner")
comp_interact_2$model <- "Two-way interactions"

# Add three-way interaction
mod_interact_3 <- lm(friendship_importance ~ bs(age, df = 4)*gender*partner, data = dat)
comp_interact_3 <- avg_comparisons(mod_interact_3, variables = "partner")
comp_interact_3$model <- "Three-way interaction"

comp_interact <- rbind(data.frame(comp_interact_1), data.frame(comp_interact_2), data.frame(comp_interact_3))
comp_interact$no <- 1:3
ggplot(comp_interact, aes(x = no, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_point() +
  geom_errorbar() +
  geom_hline(yintercept = 0) +
  coord_cartesian(ylim = c(-0.4, 0.4)) +
  scale_x_continuous(breaks = 1:3, labels = comp_interact$model) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  xlab("Interactions included") +
  ylab("Estimated difference in friendship importance")
```


