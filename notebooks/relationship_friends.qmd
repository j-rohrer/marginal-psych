---
title: "Example 2: Relationship Status and the Importance of Friends"
author: "Julia Rohrer"
date: "`r Sys.Date()`"
format: 
  html:
    toc: true
---

Before we start, let's execute a helper script that loads the necessary dependencies.

```{r}
source(here::here("scripts/load.R"))
```

# Overview

This document contains example 2, in which we analyze the association between relationship status and the importance people assign to friends.
Data can be retrieved from https://osf.io/gj6x5/files/osfstorage/63b81606c8da86094edf234b. 

# Read the data

```{r load_fit}
# Read the data
dat <- read.csv(here("data/start.csv"))

# Restrict to range that we can model well
dat <- dat[dat$sex != 3, ] # exclude 5 people who reported a gender distinct from male/female
dat <- dat[dat$age < 60, ] # exclude people over the age of 60

# Limit to complete cases
dat <- dat[complete.cases(dat[, c("age", "sex", "partner_any", "IMP_friends_Start")]),]

dat$sex <- as.factor(dat$sex)

table(dat$age)
table(dat$sex)
table(dat$partner_any)


```
# Visualize associations with age

```{r}

age_lin <- lm(IMP_friends_Start ~ age, data = dat)
age_cat <- lm(IMP_friends_Start ~ as.factor(age), data = dat)
age_smooth <- lm(IMP_friends_Start ~ bs(age, df = 4), data = dat)
#age_poly <- lm(IMP_friends_Start ~ age + I(age^2) , data = dat)

pred_lin <- avg_predictions(age_lin, by = "age")
pred_cat <- avg_predictions(age_cat, by = "age")
pred_smooth <- avg_predictions(age_smooth, by = "age")
#pred_poly <- avg_predictions(age_poly, by = "age")

ggplot() +
  # categorical
  geom_line(data = pred_cat, aes(x = age, y = estimate), color = "#F0E442") +
  geom_ribbon(data = pred_cat, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = "#F0E442") +
  # linear
  geom_line(data = pred_lin, aes(x = age, y = estimate), color = "#0072B2") +
  geom_ribbon(data = pred_lin, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = "#0072B2") +
  # smoothed
  geom_line(data = pred_smooth, aes(x = age, y = estimate), color = "#009E73") +
  geom_ribbon(data = pred_smooth, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = "#009E73") +
  coord_cartesian(ylim = c(2.5, 5)) +
  # poly
  #geom_line(data = pred_poly, aes(x = age, y = estimate), color = "#CC79A7") +
  #geom_ribbon(data = pred_poly, aes(x = age, ymin = conf.low, ymax = conf.high), alpha = .2, fill = "#CC79A7") +
  xlab("Age") +
  ylab("Importance of friends (95% CI)")
ggsave("Plots/age.png", width = 4, height = 3)

```





# Model fitting and interpretation with `marginaleffects`

```{r}

mod <- lm(IMP_friends_Start ~ bs(age, df = 4) + sex + partner_any +
            bs(age, df = 4):sex + partner_any:sex + bs(age, df = 4):partner_any, data = dat)

avg_comparisons(mod, variables = "partner_any")
avg_comparisons(mod, variables = "partner_any", by = "sex")

comp <- avg_comparisons(mod, variables = "partner_any", by = "age")

ggplot(comp, aes(x = age, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_line() +
  geom_ribbon(alpha = .1) +
  geom_hline(yintercept = 0)
```



# Changing the degree of model complexity
```{r}
# To do: Illustrate 

```


# Ordinal robustness check

```{r}
dat$IMP_friends_Start_factor <- factor(dat$IMP_friends_Start, ordered = TRUE)

mod_ord <- clm(IMP_friends_Start_factor ~ bs(age, df = 4) + sex + partner_any +
            bs(age, df = 4):sex + partner_any:sex + bs(age, df = 4):partner_any, 
            data = dat,
            link = "probit")

avg_comparisons(mod_ord, variables = "partner_any")

avg_comparisons(mod_ord, variables = "partner_any", hypothesis = ~ I(sum(x * 1:5)))

``` 


