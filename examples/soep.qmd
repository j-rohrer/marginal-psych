# German Socio-Economic Panel Study

Before we start, let's execute [a helper script](https://github.com/j-rohrer/marginal-psych/blob/main/scripts/load.R) that loads the necessary dependencies.

```{r}
#| warning: false
#| message: false
source(here::here("scripts/load.R"))
```

## Overview

This document contains the analysis code underlying the running example in the manuscript section on target quantities, as well as the code that generates Figure 1.
Annotations were later added manually using PowerPoint.

## Data Source

We analyze freely available practice data from the German Socio-Economic Panel Study (SOEP). The data can be downloaded from the SOEP website (https://www.diw.de/en/diw_01.c.836543.en/soep_practice_dataset.html). We are using the English version (DOI: 10.5684/soep.practice.v36).

```{r load_data}
soep <- read_dta(here("data/practice_en/practice_dataset_eng.dta"))
head(soep)
```

## Model Specification

We fit a flexible model that predicts life satisfaction based on sex, age, and income. The model uses basis splines for age and income to capture non-linear relationships and includes all interactions between variables. We limit our analysis to people under the age of 60.

```{r fit_model}
mod <- lm(
  lebensz_org ~ sex * bs(alter, df = 3) * bs(einkommenj1, df = 3),
  data = soep[soep$alter < 60, ]
)
```

Let's examine the model coefficients to confirm they are not easily interpretable in their raw form:

```{r model_summary}
summary(mod)
```

## Calculating Various Quantities

Now we'll demonstrate different types of marginal effects calculations using a hypothetical 35-year-old woman as our example.

### Predictions

First, let's predict the life satisfaction of a 35-year-old woman who earns €20,000:

```{r prediction_20k}
prediction_20000 <- predictions(mod, 
  newdata = data.frame(sex = 1, alter = 35, einkommenj1 = 20000)
)
prediction_20000
```

What if she earned twice as much (€40,000)?

```{r prediction_40k}
prediction_40000 <- predictions(mod,
  newdata = data.frame(sex = 1, alter = 35, einkommenj1 = 40000)
)
prediction_40000
```

### Comparisons

We can directly compare these two predictions to see the effect of doubling income:

```{r comparison}
cmp <- comparisons(
  mod,
  newdata = data.frame(sex = 1, alter = 35, einkommenj1 = 20000),
  variables = list("einkommenj1" = c(20000, 40000))
)
cmp
```

Increasing income from €20,000 to €40,000 results in an increase of approximately `{r} sprintf("%.3f", cmp$estimate)` points in life satisfaction.

### Slopes

How much does life satisfaction increase with income at the €20,000 level?

```{r slope}
slope_20000 <- slopes(mod,
  newdata = data.frame(sex = 1, alter = 35, einkommenj1 = 20000),
  variables = "einkommenj1"
)
slope_20000
```

The slope is interesting, but it is often more useful to express the association between the outcome and the predictor in terms of a discrete change. For this, we can use the `variables` argument in the `comparisons` function.

```{r slope_per_1000}
cmp <- comparisons(mod,
  newdata = data.frame(sex = 1, alter = 35, einkommenj1 = 20000),
  variables = list("einkommenj1" = 10000)
)
cmp
```

Our model suggests that increasing income by €10,000, starting from the €20,000 level, is associated with an increase in life satisfaction of approximately `{r} sprintf("%.3f", cmp$estimate)` points.

## Generate Figure 1

In the main manuscript, we illustrate the different quantities calculated above in Figure 1. This figure shows the predictions, comparisons, and slopes that characterize the estimated relationship between income and life satisfaction for a specific type of individual.

### Quick Plot Option

We could directly create a plot using the `marginaleffects` package:

```{r quick_plot}
library(patchwork)

plot_predictions(mod, condition = list(
  einkommenj1 = 0:80000,
  sex = 1,
  alter = 35))
```

### Custom Plot

However, for better control over the visualization, let's create a custom plot that illustrates the different types of quantities we calculated above.

First, we generate predictions across a range of income values for our hypothetical 35-year-old woman:

```{r data_for_plot}
hypothetical_woman <- data.frame(
  sex = 1,
  alter = 35,
  einkommenj1 = 0:80000
)

hypothetical_predictions <- predictions(mod, newdata = hypothetical_woman)
head(hypothetical_predictions)

hypothetical_woman$lebensz_org <- hypothetical_predictions$estimate
```

Now we set up the plot styling:

```{r plot_setup}
slope_range <- c(0, 60000)

color_prediction <- "#0072B2"
color_comparison <- "#56B4E9"
color_slope <- "#D55E00"
color_neutral <- "#BBBBBB"
```

Finally, we create the plot that visualizes predictions, comparisons, and slopes:

```{r final_plot}
ggplot(data = hypothetical_woman, aes(x = einkommenj1, y = lebensz_org)) +
  geom_line() +
  # Comparison 20,000 vs 40,000 (connected with  segments that form a slope triangle)
  geom_segment(
    x = 20000,
    xend = 40000,
    y = prediction_20000$estimate,
    color = color_neutral,
    linetype = "dashed"
  ) +
  geom_segment(
    x = 40000,
    y = prediction_20000$estimate,
    yend = prediction_40000$estimate,
    color = color_comparison,
    linetype = "solid"
  ) +
  # Slope line at an income of 20,000
  geom_segment(
    x = slope_range[1],
    xend = slope_range[2],
    y = prediction_20000$estimate - (20000 - slope_range[1]) * slope_20000$estimate,
    yend = prediction_20000$estimate + (slope_range[2] - 20000) * slope_20000$estimate,
    color = color_slope
  ) +
  # Predictions at 20,000 and 40,000
  geom_point(x = 20000, y = prediction_20000$estimate, color = color_prediction) +
  geom_point(x = 40000, y = prediction_40000$estimate, color = color_prediction) +
  # Layout, make it look nicer
  xlab("Annual gross income") +
  ylab("Predicted life satisfaction") +
  coord_cartesian(ylim = c(7, 8.25)) +
  scale_x_continuous(
    labels = label_dollar(prefix = "", suffix = "€", big.mark = ",")
  )
```





